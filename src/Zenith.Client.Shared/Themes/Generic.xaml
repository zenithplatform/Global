<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Zenith.Client.Shared.Controls"
                    xmlns:Converters="clr-namespace:Zenith.Client.Shared.Converters"
                    xmlns:SharedStyles="clr-namespace:Zenith.Client.Shared.Styles"
                    xmlns:popup="clr-namespace:Zenith.Client.Shared.Windows"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:TemplateSelectors="clr-namespace:Zenith.Client.Shared.TemplateSelectors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Zenith.Client.Shared;component/Styles/Buttons.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Zenith.Client.Shared;component/Styles/General.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--<Converters:KeyToResourceConverter x:Key="KeyResourceConverter" />-->
    <Converters:MultiplyConverter x:Key="multiplyConverter" />
    <Converters:ImageContentConverter x:Key="ImageContentConverter" />

    <Storyboard x:Key="ExpandExtraContent" AccelerationRatio="0.4" DecelerationRatio="0.4">
        <DoubleAnimation Storyboard.TargetName="ExpandableRegion"
                         Storyboard.TargetProperty="Tag"
                         To="1"
                         Duration="0:0:0.4"/>
    </Storyboard>

    <Storyboard x:Key="CollapseExtraContent" AccelerationRatio="0.4" DecelerationRatio="0.4">
        <DoubleAnimation Storyboard.TargetName="ExpandableRegion"
                         Storyboard.TargetProperty="Tag"
                         To="0"
                         Duration="0:0:0.4"/>
    </Storyboard>

    <!--  Button style -->
    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,2,3,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PinWindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0,3,3,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Image Name="pinImage" Source="pack://application:,,,/Zenith.Client;component/Resources/pin_unpinned_16.png" 
                                                                        Width="16" 
                                                                        Height="16"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsPinned, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                            <Setter TargetName="pinImage" Property="Source" Value="pack://application:,,,/Zenith.Client;component/Resources/pin_pinned_16.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPinned, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                            <Setter TargetName="pinImage" Property="Source" Value="pack://application:,,,/Zenith.Client;component/Resources/pin_unpinned_16.png" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!-- Window style -->
    <Style TargetType="{x:Type popup:PopupWindow}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type popup:PopupWindow}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="White">
                        <Grid>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="Gray" Background="White" Grid.Row="0" Grid.Column="0" Height="30" 
                                        BorderThickness="0,0,0,1">
                                    <TextBlock x:Name="titleBar"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Margin="5,0,0,0"
                                           VerticalAlignment="Center"/>
                                </Border>
                                <Border Grid.Row="0" Grid.Column="1" Height="30" BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <StackPanel Orientation="Horizontal" Background="White" >
                                        <Button x:Name="pinButton" Style="{StaticResource PinWindowButtonStyle}"/>
                                        <Button x:Name="closeButton" Style="{StaticResource WindowButtonStyle}" Content="r" />
                                    </StackPanel>
                                </Border>
                                <Grid Background="{TemplateBinding Background}"
                                           Grid.Row="1" Grid.ColumnSpan="2" Margin="5,5,5,5">
                                    <AdornerDecorator>
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter/>
                                        </Border>
                                    </AdornerDecorator>
                                </Grid>
                            </Grid>
                            <!--Resize grid to be inserted here-->
                            <Grid x:Name="resizeGrid">
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        VerticalAlignment="Top"
                                        Height="5"
                                        x:Name="top"
                                        Margin="5,0,5,0" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        x:Name="bottom"
                                        Height="5"
                                        VerticalAlignment="Bottom"
                                        Margin="5,0,5,0" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        HorizontalAlignment="Left"
                                        Margin="0,5,0,5"
                                        Width="5"
                                        x:Name="left"/>
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        Margin="0,5,0,5"
                                        Width="5"
                                        HorizontalAlignment="Right"
                                        x:Name="right" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Width="5"
                                        Height="5"
                                        x:Name="bottomLeft" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        VerticalAlignment="Bottom"
                                        Height="5"
                                        Width="5"
                                        HorizontalAlignment="Right"
                                        x:Name="bottomRight" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        HorizontalAlignment="Right"
                                        Width="5"
                                        Height="5"
                                        VerticalAlignment="Top"
                                        x:Name="topRight" />
                                <Rectangle
                                        Stroke="{x:Null}"
                                        Fill="Transparent"
                                        HorizontalAlignment="Left"
                                        Width="6"
                                        VerticalAlignment="Top"
                                        Height="5"
                                        x:Name="topLeft" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:DataListContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DataListContainer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0"
                                Grid.ColumnSpan="3"
                                Margin="5,0,0,0">
                            <DockPanel>
                                <Border DockPanel.Dock="Left" Name="Toolbar">
                                    <StackPanel Orientation="Horizontal" 
                                                HorizontalAlignment="Left">
                                        <Button Style="{StaticResource FlatButtonStyle}" Margin="5,0,0,0">
                                            <Rectangle Fill="Black" Height="16" Width="16">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource save}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="16" Width="16" Margin="5,0,0,0">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource table}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="16" Width="16" Margin="5,0,0,0">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource printer}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </StackPanel>
                                </Border>
                                <Border DockPanel.Dock="Right" Name="Filter">
                                    <StackPanel Orientation="Horizontal"
                                                HorizontalAlignment="Right">
                                        <ToggleButton Style="{StaticResource FlatToggleButtonStyle}"
                                                      Background="White"
                                                      Name="FilterSwitch"
                                                      BorderThickness="0">
                                            <Rectangle Name="ButtonRect" Fill="Black" Height="16" Width="16">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_filter}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterBox"
                                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                                                      KeyTime="00:00:00.750"
                                                                                      Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterBox"
                                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                                                      KeyTime="00:00:00.750"
                                                                                      Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterSwitch"
                                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                                                      KeyTime="00:00:00.750"
                                                                                      Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterBox"
                                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                                           DecelerationRatio=".9">
                                                                <SplineDoubleKeyFrame KeyTime="00:00:00.750" Value="200" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterBox"
                                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                                                      KeyTime="00:00:00.750"
                                                                                      Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="FilterSwitch"
                                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1"
                                                                                      KeyTime="00:00:00.750"
                                                                                      Value="210" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                            <ToggleButton.RenderTransform>
                                                <TranslateTransform X="210" Y="0" />
                                            </ToggleButton.RenderTransform>
                                        </ToggleButton>
                                        <TextBox Name="FilterBox" 
                                                 Margin="10,0,5,0" 
                                                 Text="" 
                                                 VerticalAlignment="Center" 
                                                 Width="200"
                                                 Opacity="0"
                                                 Panel.ZIndex="-20">
                                            <TextBox.RenderTransform>
                                                <TranslateTransform X="210" Y="0" />
                                            </TextBox.RenderTransform>
                                        </TextBox>
                                    </StackPanel>
                                </Border>
                            </DockPanel>
                        </Border>

                        <Border Grid.Row="1"
                                Grid.ColumnSpan="3"
                                BorderBrush="DarkGray"
                                BorderThickness="0" Margin="5" Name="Content">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Border>

                        <Border Grid.Row="2"
                                Grid.ColumnSpan="3"
                                Margin="5,0,0,0">
                            <DockPanel>
                                <Border DockPanel.Dock="Left" Name="Navigation">
                                    <StackPanel Orientation="Horizontal"
                                                HorizontalAlignment="Left"
                                                Margin="0">
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="12" Width="12">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource navigation_first}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="12" Width="10">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource navigation_previous}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <TextBlock Margin="5,0,5,0" FontWeight="Bold" FontSize="13" TextAlignment="Center" VerticalAlignment="Center">
                                            <Run Text="{Binding CurrentPageNumber, Mode=OneWay}"/>
                                            <Run Text=" of "/>
                                            <Run Text="{Binding TotalPagesNumber, Mode=OneWay}"/>
                                        </TextBlock>
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="12" Width="10">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource navigation_next}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Style="{StaticResource FlatButtonStyle}">
                                            <Rectangle Fill="Black" Height="12" Width="12">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource navigation_last}" Stretch="Fill" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </StackPanel>
                                </Border>
                                <Border DockPanel.Dock="Right" Name="RecordNumberSelection">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Margin="5,0,5,0" Text="Show :" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <ComboBox ItemsSource="{Binding EntriesPerPageList}" SelectedItem="{Binding PageSize}" Height="20" Width="70"></ComboBox>
                                        <TextBlock Margin="5,0,5,0" Text=" entries" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    </StackPanel>
                                </Border>
                            </DockPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:TitledPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:TitledPanel}">
                    <Border Background="White" BorderBrush="DarkGray" BorderThickness="1">
                        <DockPanel>
                            <Label Name="TitleLabel" DockPanel.Dock="Top" FontFamily="./#Segoe UI" Foreground="DarkGray" HorizontalAlignment="Center" Content="{TemplateBinding Title}"/>
                            <Separator Height="5" Width="{Binding ElementName=TitleLabel, Path=ActualWidth}" DockPanel.Dock="Top" Background="Gray" />

                            <ContentPresenter  
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch" 
                                            Margin="0,10,0,0"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:AnimatedDropdownButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:AnimatedDropdownButton}">
                    <Border Name="Chrome" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="0" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>

                                <Border Name="ExpandableRegion"
                                        Grid.Column="1">
                                    <Border.Tag>
                                        <sys:Double>0.0</sys:Double>
                                    </Border.Tag>

                                    <Border.Width>
                                        <MultiBinding Converter="{StaticResource multiplyConverter}">
                                            <Binding Path="ActualWidth" ElementName="Container"/>
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Border.Width>

                                    <StackPanel Orientation="Horizontal"
                                                    Name="Container">

                                        <TextBlock Text="{TemplateBinding Caption}" 
                                                   VerticalAlignment="Top" 
                                                   Margin="0,0,10,0"/>

                                        <Path Grid.Column="2"
                                                Margin="0,0,5,0"
                                                Name="Arrow"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center" 
                                                Data="M 0 0 L 4 4 L 8 0 Z"
                                                StrokeThickness="0"
                                                Fill="Black"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" 
                                    Value="{Binding (SharedStyles:StyleProperties.MouseOverBackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ExpandExtraContent}" />
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CollapseExtraContent}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandableRegion" Property="Width" Value="Auto" />
                        </Trigger>-->

                        <!--<Trigger Property="IsFocused" Value="False">
                            <Setter TargetName="ExpandableRegion" Property="Width" Value="0" />
                            <Setter Property="IsChecked" Value="False" />
                        </Trigger>-->
                        <!--<Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ExpandableRegion" Property="Width" Value="0" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:EditableTextBlock}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:EditableTextBlock}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Name="EditBoxRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Label Margin="2"
                                   Grid.Column="0"
                                   Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextBlockContent}"
                                   Padding="2,0,0,0"
                                   VerticalContentAlignment="Center"
                                   HorizontalAlignment="Left"
                                   FontWeight="Bold"/>
                            <ToggleButton Cursor="Hand"
                                          Grid.Column="1"
                                            Margin="5"
                                            Name="EditButton"
                                            HorizontalAlignment="Right">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border BorderThickness="0" 
                                                    Name="Chrome">
                                                        <Rectangle Name="rect" Fill="Black" Height="16" Width="16">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Visual="{StaticResource appbar_edit}" Stretch="Uniform" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="rect" Property="Fill" Value="Blue" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="rect" Property="Fill" Value="DarkGray" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <TextBox Name="EditBox"
                                     Grid.Column="0" 
                                     Grid.ColumnSpan="2" 
                                     Grid.Row="1"
                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextBlockContent}" 
                                     Margin="5"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="EditButton" Property="IsChecked" Value="True">
                            <Setter TargetName="EditBoxRow" Property="Height" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ImageContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ImageContentControl}">
                    <Border Name="Chrome" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">

                        <ContentPresenter Width="{TemplateBinding Width}"
                                          Height="{TemplateBinding Height}"
                                          Name="ImageContent">
                            <ContentPresenter.Content>
                                <MultiBinding Converter="{StaticResource ImageContentConverter}">
                                    <Binding Path="ImageResource" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="FillColor" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </ContentPresenter.Content>
                        </ContentPresenter>

                        <!--<StackPanel Orientation="Horizontal">
                            
                            <TextBlock Text="{TemplateBinding Caption}" 
                                       VerticalAlignment="Center"
                                       Foreground="Black"
                                       Margin="10,0,0,0"
                                       Width="Auto" />
                        </StackPanel>-->
                        <!--<ContentPresenter ContentTemplateSelector="{StaticResource ImageTemplateSelector}" 
                                          Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorLevel=2, AncestorType={x:Type ContentControl}}}" />-->

                        <!--<ContentControl ContentTemplateSelector="{StaticResource ImageTemplateSelector}" 
                                        Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorLevel=2, AncestorType={x:Type ContentControl}}}"/>-->

                        <!--<ContentControl ContentTemplateSelector="{StaticResource ImageTemplateSelector}" 
                                        Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ImageContent" Property="OpacityMask" Value="{Binding Path=MouseOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Controls:AdvancedDataGrid">

    </Style>
</ResourceDictionary>